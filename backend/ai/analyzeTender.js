import fs from "fs";
import OpenAI from "openai";

// ‚úÖ import "legacy" pour compatibilit√© Render (pas de DOM)
let pdfParse;
try {
  const mod = await import("pdf-parse/lib/pdf-parse.js");
  pdfParse = mod.default || mod;
  console.log("‚úÖ pdf-parse charg√© en mode legacy (Render compatible)");
} catch (err) {
  console.error("‚ùå Erreur import pdf-parse:", err);
}

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

/**
 * Analyse compl√®te d'un document d'appel d'offres pour MyM√≠r.
 * @param {string} filePath - Chemin du fichier PDF/DOCX temporaire
 * @returns {object} R√©sultat complet d'analyse IA
 */
export async function analyzeTender(filePath) {
  try {
    // === 1Ô∏è‚É£ Lecture du fichier PDF ===
    const buffer = fs.readFileSync(filePath);
    const data = await pdfParse(buffer);
    const extractedText = data.text.slice(0, 15000); // limite de s√©curit√©

    // === 2Ô∏è‚É£ Prompt professionnel MyM√≠r ===
    const prompt = `
Tu es **MyM√≠r**, une IA d'analyse strat√©gique d'appels d'offres publics et priv√©s.
Ta mission est d‚Äôaider les TPE, PME et bureaux d‚Äô√©tudes √† comprendre rapidement les opportunit√©s et les risques d‚Äôun march√©.

Analyse le document suivant et produis une synth√®se structur√©e en 7 sections.

1Ô∏è‚É£ Identification du march√©
2Ô∏è‚É£ Donn√©es administratives cl√©s
3Ô∏è‚É£ Documents exig√©s
4Ô∏è‚É£ Crit√®res d‚Äô√©valuation
5Ô∏è‚É£ Analyse des risques
6Ô∏è‚É£ Faisabilit√© pour une PME
7Ô∏è‚É£ Score d‚Äôopportunit√© et recommandation finale

üßæ Texte extrait :
${extractedText}
`;

    // === 3Ô∏è‚É£ Appel OpenAI ===
    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      temperature: 0.3,
      messages: [
        {
          role: "system",
          content:
            "Tu es une IA experte en march√©s publics et en analyse de DCE. Fournis des analyses fiables, claires et structur√©es.",
        },
        { role: "user", content: prompt },
      ],
    });

    const analysis = completion.choices[0].message.content;

    // === 4Ô∏è‚É£ Nettoyage du fichier apr√®s traitement ===
    fs.unlinkSync(filePath);

    // === 5Ô∏è‚É£ R√©sultat renvoy√© au front ===
    return {
      success: true,
      analysis,
      generated_at: new Date().toISOString(),
      model: "gpt-4o-mini",
    };
  } catch (err) {
    console.error("‚ùå Erreur IA :", err);
    return {
      success: false,
      message:
        "Erreur pendant l'analyse du document. V√©rifie la cl√© OpenAI ou le format du fichier.",
    };
  }
}
