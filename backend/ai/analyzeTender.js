// backend/ai/analyzeTender.js
import fs from "fs";
import OpenAI from "openai";
import pdfjsLib from "pdfjs-dist/legacy/build/pdf.js"; // ‚úÖ Version stable Node-compatible

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

// ===============================================
// üîç Extraction du texte depuis un PDF
// ===============================================
async function extractTextFromPDF(filePath) {
  try {
    const data = new Uint8Array(fs.readFileSync(filePath));
    const loadingTask = pdfjsLib.getDocument({ data });
    const pdf = await loadingTask.promise;

    let text = "";
    for (let i = 1; i <= pdf.numPages; i++) {
      const page = await pdf.getPage(i);
      const content = await page.getTextContent();
      text += content.items.map((item) => item.str).join(" ") + "\n";
    }

    if (!text.trim()) throw new Error("PDF vide ou non lisible");
    return text;
  } catch (err) {
    console.error("‚ùå Erreur lecture PDF :", err);
    throw new Error("Impossible de lire le PDF ‚Äî format non compatible ou corrompu");
  }
}

// ===============================================
// üß† Analyse IA MyM√≠r
// ===============================================
export async function analyzeTender(filePath) {
  try {
    console.log("üìÑ Lecture du PDF :", filePath);
    const extractedText = await extractTextFromPDF(filePath);
    console.log("‚úÖ Texte extrait :", extractedText.length, "caract√®res");

    const prompt = `
Tu es **MyM√≠r**, une IA experte en analyse d‚Äôappels d‚Äôoffres publics et priv√©s.
Analyse le texte suivant et fournis une synth√®se structur√©e :

1Ô∏è‚É£ Identification du march√©
2Ô∏è‚É£ Donn√©es administratives cl√©s
3Ô∏è‚É£ Documents exig√©s
4Ô∏è‚É£ Crit√®res d‚Äô√©valuation
5Ô∏è‚É£ Analyse des risques
6Ô∏è‚É£ Faisabilit√© pour une PME
7Ô∏è‚É£ Score d‚Äôopportunit√© et recommandation

Texte extrait :
${extractedText.slice(0, 15000)}
`;

    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      temperature: 0.3,
      messages: [
        { role: "system", content: "Tu es une IA experte en march√©s publics. Sois claire et concise." },
        { role: "user", content: prompt },
      ],
    });

    const analysis = completion.choices?.[0]?.message?.content || "Aucune analyse g√©n√©r√©e.";
    fs.unlinkSync(filePath);
    console.log("‚úÖ Analyse g√©n√©r√©e avec succ√®s.");

    return {
      success: true,
      analysis,
      generated_at: new Date().toISOString(),
    };
  } catch (err) {
    console.error("‚ùå Erreur compl√®te analyzeTender :", err);
    return {
      success: false,
      message: "Erreur pendant l'analyse du document : " + (err.message || "Erreur inconnue."),
    };
  }
}